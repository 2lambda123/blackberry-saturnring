
STEPS after VM boots up

Post bootup (or via-context) steps:
0. You may want to upgrade to the latest software version 
cd saturnring
git pull origin master

2. Point to the production database and not the sqlite database. This is acheived by editing the file ~/saturnring/ssddj/ssddj/settings_postgres.py and inserting the correct postgres details. Then copy this file over to ~/saturnring/ssddj/ssddj/settings.py
3. Create mountpoint (NFS) /nfsmount, and then 
a) create subdirectory saturnring/saturnringlog, set owner to local:local
b) create subdirectory saturnring/saturnconfig, set owner to local:local
c) Initialize an empty git repo
git init /nfsmount/saturnring/saturnringconfig
d) Create keys 
cd /nfsmount/saturnring/saturnringconfig and run
ssh-keygen -q -f saturnkey -N ''
ssh-keygen -f saturnkey.pub -e -m pem > saturnkey.pem
git add *
git commit -a -m "Created Saturn keys"
e) create /nfsmount/saturnring/saturnringconfig/redis and change its owner to redis:redis
4. sudo service redis-server restart
5. sudo service supervisord restart; check via sudo supervisorctl if the 5 job threads are running
6. update crontab to do stateupdates
crontab -e
* * * * * curl -X GET http://<local_ipaddress>/api/stateupdate/

General  notes:
Remember - if you change any of the above directories etc., you may have to change it in the saturnring/ssddj/ssddj/settings.py and saturnring/ssddj/saturn.ini
In general, follow the scripts in saturnring/deployments/vagrant/saturnring*, be careful about substituting vagrant <-> local everywhere




In case of upgrading software etc.

Brought down apache2 server

sudo service apache2 stop

Pull git

PIP Install requiments

Edited /var/www/saturnring/index.wsgi for any directory changes

set settings_postgres to settings.py

Activate the virtual environment
source ~/saturnring/saturnenv/bin/activate

Update the schema if required
cd ~/saturnring/ssddj
python manage.py schemamigration ssdfrontend
python manage.py migrate ssdfrontend

Do any changes in the /etc/supervisor/conf.d/rqworker.conf

restart redis-server
restart supervisor

Check threads come up in sudo supervisorctl
sudo supervisorctl, then run status; if threads are not running run reload



